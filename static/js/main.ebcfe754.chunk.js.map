{"version":3,"sources":["components/Posts/Post/Post.module.css","containers/RedditSearch/RedditSearch.module.css","components/UI/SearchForm/TextInput/TextInput.module.css","components/UI/SearchForm/SubmitButton/SubmitButton.module.css","hoc/Auxiliary/Auxiliary.js","components/Layout/Layout.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/UI/SearchForm/SearchForm.js","components/UI/SearchForm/TextInput/TextInput.js","components/UI/SearchForm/SubmitButton/SubmitButton.js","containers/RedditSearch/RedditSearch.js","App.js","index.js","components/Posts/Posts.module.css"],"names":["module","exports","aux","props","children","layout","Post","className","classes","Header","Title","title","Author","author","Footer","Created","Score","score","FauxLink","href","url","target","rel","Posts","Items","posts","map","post","Item","key","id","created","created_utc","permalink","SearchForm","action","TextInput","type","onChange","changed","SubmitButton","Submit","value","onClick","submit","RedditSearch","state","inputValue","error","inputChangeHandler","e","setState","submitHandler","preventDefault","subredditName","axios","get","then","res","console","log","data","obj","response","status","headers","errorMessage","message","request","this","Component","App","Layout","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebcfe754.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__3oZoN\",\"Header\":\"Post_Header__1AnU1\",\"Footer\":\"Post_Footer__faAFY\",\"Title\":\"Post_Title__3iOTP\",\"Author\":\"Post_Author__33K1I\",\"Created\":\"Post_Created__3k5Nf\",\"FauxLink\":\"Post_FauxLink__381Ml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RedditSearch\":\"RedditSearch_RedditSearch__3qZ8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextInput\":\"TextInput_TextInput__2LX6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Submit\":\"SubmitButton_Submit__hSaPU\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst layout = (props) => (\r\n  <Aux>\r\n    Toolbar\r\n    <main>\r\n      {props.children}\r\n    </main>\r\n  </Aux>\r\n);\r\n\r\nexport default layout;","import React from 'react';\r\n\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  // const createdDate = new Date(props.created);\r\n  // console.log(props.created);\r\n  \r\n  // const createdDateString = createdDate.toLocaleString();\r\n\r\n  return (\r\n    <div className={classes.Post}>\r\n      <div className={classes.Header}>\r\n        <h2 className={classes.Title}>{props.title}</h2>\r\n        <h3 className={classes.Author}>By: {props.author}</h3>\r\n      </div>\r\n      <div className={classes.Footer}>\r\n        <p className={classes.Created}>Created: </p>\r\n        <p className={classes.Score}>Score: {props.score}</p>\r\n      </div>\r\n      <a\r\n        className={classes.FauxLink}\r\n        href={`https://www.reddit.com${props.url}`}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        title={props.title}></a>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nimport classes from './Posts.module.css';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Post from './Post/Post';\r\n\r\nconst Posts = (props) => (\r\n  <Aux>\r\n    { props.title ? <h1 className={classes.Title}>Now showing posts from: {`/r/${props.title}`}</h1> : null }\r\n    <ul className={classes.Items}>\r\n      {props.posts.map(post => (\r\n        <li className={classes.Item}>\r\n          <Post\r\n            key={post.id}\r\n            title={post.title}\r\n            author={post.author}\r\n            created={post.created_utc} \r\n            url={post.permalink}\r\n            score={post.score}\r\n          />\r\n        </li>\r\n      )\r\n      )}\r\n    </ul>\r\n    {props.title ? \r\n    <a href={`https://www.reddit.com/r/${props.title}`} target=\"_blank\" rel=\"noopener noreferrer\">See More</a>\r\n    : null}\r\n  </Aux>\r\n);\r\n\r\nexport default Posts;","import React from 'react';\r\n\r\nconst SearchForm = (props) => (\r\n  <form action=\"/\">\r\n    {props.children}\r\n  </form>\r\n)\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nimport classes from './TextInput.module.css';\r\n\r\nconst TextInput = (props) => (\r\n  <input className={classes.TextInput} type=\"text\" onChange={props.changed} />\r\n);\r\n\r\nexport default TextInput;","import React from 'react';\r\n\r\nimport classes from './SubmitButton.module.css';\r\n\r\nconst SubmitButton = (props) => (\r\n  <input\r\n    className={classes.Submit}\r\n    type=\"submit\"\r\n    value=\"Submit\"\r\n    onClick={props.submit} />\r\n)\r\n\r\nexport default SubmitButton;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport classes from './RedditSearch.module.css';\r\n\r\nimport Posts from '../../components/Posts/Posts';\r\nimport SearchForm from '../../components/UI/SearchForm/SearchForm';\r\nimport TextInput from '../../components/UI/SearchForm/TextInput/TextInput';\r\nimport SubmitButton from '../../components/UI/SearchForm/SubmitButton/SubmitButton';\r\n\r\nclass RedditSearch extends Component {\r\n  state = {\r\n    inputValue: '',\r\n    posts: [],\r\n    title: '',\r\n    error: false\r\n  }\r\n\r\n  inputChangeHandler = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const subredditName = this.state.inputValue;\r\n    axios.get(`https://www.reddit.com/r/${subredditName}.json`)\r\n      .then(res => {\r\n        console.log(res);\r\n        const posts = res.data.data.children.map(obj => obj.data);\r\n        this.setState({\r\n          error: false,\r\n          title: subredditName,\r\n          posts: posts\r\n        });\r\n      }, error => {\r\n          this.setState({error: true})\r\n          if (error.response) {\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            this.setState({errorMessage: `There was an error with the response: ${error.response.data.error} ${error.response.data.message}`})\r\n          } else if (error.request) {\r\n            console.log(error.request);\r\n            this.setState({errorMessage: 'There was an error with your request. Please try a different subreddit name.'})\r\n          } else {\r\n            console.log('Error', error.message);\r\n            this.setState({errorMessage: 'Something went wrong, please try again.'})\r\n          }\r\n          console.log(error);\r\n      });\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <div className={classes.RedditSearch}>\r\n        <SearchForm>\r\n          <TextInput changed={this.inputChangeHandler} />\r\n          <SubmitButton submit={this.submitHandler} />\r\n        </SearchForm>\r\n\r\n        {this.state.error ? <h2>{this.state.errorMessage}</h2> : \r\n          <Posts title={this.state.title} posts={this.state.posts} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RedditSearch;","import React from 'react';\r\n\r\nimport Layout from './components/Layout/Layout';\r\nimport RedditSearch from './containers/RedditSearch/RedditSearch';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <RedditSearch />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Posts_Title__2TM2p\",\"Items\":\"Posts_Items__1dn85\",\"Item\":\"Posts_Item__1C8qj\"};"],"sourceRoot":""}